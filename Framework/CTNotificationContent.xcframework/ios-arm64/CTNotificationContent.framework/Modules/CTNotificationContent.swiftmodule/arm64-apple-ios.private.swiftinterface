// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CTNotificationContent
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import AVKit
@_exported import CTNotificationContent
import Foundation
import Swift
import UIKit
import UserNotificationsUI
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension UIKit.UIColor {
  convenience public init?(hex: Swift.String)
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class CTRatingsViewController : CTNotificationContent.BaseCTNotificationContentViewController, UIKit.UIGestureRecognizerDelegate {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class CTUtiltiy : ObjectiveC.NSObject {
  @objc public static func isRequiredKeysProvided(jsonString: Swift.String) -> Swift.Bool
  @objc public static func getControllerType(jsonString: Swift.String) -> CTNotificationContent.BaseCTNotificationContentViewController
  @objc override dynamic public init()
  @objc deinit
}
@objc @_Concurrency.MainActor @preconcurrency public class CTProductDisplayLinearViewController : CTNotificationContent.BaseCTNotificationContentViewController, UIKit.UIGestureRecognizerDelegate {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc dynamic public init()
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class CTSingleMediaController : CTNotificationContent.BaseCTNotificationContentViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var caption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var subCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var mediaType: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var mediaURL: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public class ProductDisplayProperties : ObjectiveC.NSObject, Swift.Decodable {
  @objc final public let pt_title: Swift.String?
  @objc final public let pt_msg: Swift.String?
  @objc final public let pt_subtitle: Swift.String?
  @objc final public let pt_img1: Swift.String
  @objc final public let pt_img2: Swift.String
  @objc final public let pt_img3: Swift.String?
  @objc final public let pt_bt1: Swift.String
  @objc final public let pt_bt2: Swift.String
  @objc final public let pt_bt3: Swift.String?
  @objc final public let pt_st1: Swift.String
  @objc final public let pt_st2: Swift.String
  @objc final public let pt_st3: Swift.String?
  @objc final public let pt_dl1: Swift.String
  @objc final public let pt_dl2: Swift.String
  @objc final public let pt_dl3: Swift.String?
  @objc final public let pt_price1: Swift.String
  @objc final public let pt_price2: Swift.String
  @objc final public let pt_price3: Swift.String?
  @objc final public let pt_bg: Swift.String?
  @objc final public let pt_product_display_action: Swift.String
  @objc final public let pt_product_display_linear: Swift.String?
  @objc final public let pt_product_display_action_clr: Swift.String?
  @objc final public let pt_title_clr: Swift.String?
  @objc final public let pt_msg_clr: Swift.String?
  @objc deinit
  required public init(from decoder: any Swift.Decoder) throws
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class CTContentSliderController : CTNotificationContent.BaseCTNotificationContentViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class CTWebViewController : CTNotificationContent.BaseCTNotificationContentViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension CTNotificationContent.CTWebViewController : WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func webView(_ webView: WebKit.WKWebView, didFailProvisionalNavigation navigation: WebKit.WKNavigation!, withError error: any Swift.Error)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func webView(_ webView: WebKit.WKWebView, didFail navigation: WebKit.WKNavigation!, withError error: any Swift.Error)
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class CTTimerTemplateController : CTNotificationContent.BaseCTNotificationContentViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_Concurrency.MainActor @preconcurrency public class CTProductDisplayVerticalViewController : CTNotificationContent.BaseCTNotificationContentViewController, UIKit.UIGestureRecognizerDelegate {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc dynamic public init()
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class CTZeroBezelController : CTNotificationContent.BaseCTNotificationContentViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class CTCarouselController : CTNotificationContent.BaseCTNotificationContentViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var data: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateType: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateCaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var templateSubcaption: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var deeplinkURL: Swift.String
  @objc @_Concurrency.MainActor @preconcurrency public var isFromProductDisplay: Swift.Bool
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func handleAction(_ action: Swift.String) -> UserNotificationsUI.UNNotificationContentExtensionResponseOption
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func getDeeplinkUrl() -> Swift.String!
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
